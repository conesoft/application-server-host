@page
@using Conesoft.Server_Host.Features.WebApplication.Services
@model Conesoft.Server_Host.Pages.IndexModel
@inject WebApplicationService webApplicationService

<!DOCTYPE html>
<html>
<head>
    <title></title>
    <link href="/app.css" rel="stylesheet" />
    <link rel="manifest" href="/pwa/site.webmanifest" />
    <link rel="icon" type="image/svg" href="/conesoft-hosting.svg">
</head>
<body>
    <h1>Conesoft Host</h1>
    @foreach (var category in webApplicationService.Host.Services)
    {
        <section style="--accent-color: var(--accent)">
            <header>@category.Key</header>
            <ul>
                @foreach (var service in category)
                {
                    <li style="@($"view-transition-name: process-{service.Process}")">
                        <label>@service.Name</label>
                        <aside>
                            <p><span>pid = </span>@service.Process</p>
                            @if (service.Port != null)
                            {
                                <p><span>port = </span>@service.Port</p>
                            }
                        </aside>
                        <img src="icons/@(category.Key.ToLower()[..^1]).svg" />
                    </li>
                }
            </ul>
        </section>
    }

    <script>
        async function wait() {
            await fetch('/statechange')
            let text = await (await fetch('/')).text()
            document.startViewTransition(() => {
                document.write(text)
                document.close()
            })
        }
        wait()
    </script>
</body>
</html>